/**
 * This class is generated by jOOQ
 */
package ma.jberrich.database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import ma.jberrich.database.Employesdb;
import ma.jberrich.database.Keys;
import ma.jberrich.database.tables.records.DeptRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dept extends TableImpl<DeptRecord> {

	private static final long serialVersionUID = 387763763;

	/**
	 * The reference instance of <code>employesdb.dept</code>
	 */
	public static final Dept DEPT = new Dept();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DeptRecord> getRecordType() {
		return DeptRecord.class;
	}

	/**
	 * The column <code>employesdb.dept.DEPTNO</code>.
	 */
	public final TableField<DeptRecord, Integer> DEPTNO = createField("DEPTNO", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>employesdb.dept.DNAME</code>.
	 */
	public final TableField<DeptRecord, String> DNAME = createField("DNAME", org.jooq.impl.SQLDataType.VARCHAR.length(14), this, "");

	/**
	 * The column <code>employesdb.dept.LOC</code>.
	 */
	public final TableField<DeptRecord, String> LOC = createField("LOC", org.jooq.impl.SQLDataType.VARCHAR.length(13), this, "");

	/**
	 * Create a <code>employesdb.dept</code> table reference
	 */
	public Dept() {
		this("dept", null);
	}

	/**
	 * Create an aliased <code>employesdb.dept</code> table reference
	 */
	public Dept(String alias) {
		this(alias, DEPT);
	}

	private Dept(String alias, Table<DeptRecord> aliased) {
		this(alias, aliased, null);
	}

	private Dept(String alias, Table<DeptRecord> aliased, Field<?>[] parameters) {
		super(alias, Employesdb.EMPLOYESDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DeptRecord> getPrimaryKey() {
		return Keys.KEY_DEPT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DeptRecord>> getKeys() {
		return Arrays.<UniqueKey<DeptRecord>>asList(Keys.KEY_DEPT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Dept as(String alias) {
		return new Dept(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Dept rename(String name) {
		return new Dept(name, null);
	}
}
